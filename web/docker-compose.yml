services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
      - 443:443/tcp
      - 443:443/udp
    environment:
      CF_DNS_API_TOKEN: ${CLOUDFLARE_PROXY_API_TOKEN}
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local.${DOMAIN}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.local.${DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[1].main=local.${DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[1].sans=*.local.${DOMAIN}"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    network_mode: host
    cap_add:
      - SETUID
      - SETGID
    cap_drop:
      - all
    read_only: true
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_DDNS_API_TOKEN}
      - DOMAINS=${DOMAIN}
      - PROXIED=true
      - IP6_PROVIDER=none
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "31415:80/tcp"
    environment:
      TZ: ${TIMEZONE}
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
    volumes:
      - './pihole:/etc/pihole'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole-primary.rule=Host(`pihole-primary.local.${DOMAIN}`)"
      - "traefik.http.routers.pihole-primary.entrypoints=https"
      - "traefik.http.routers.pihole-primary.tls=true"
      - "traefik.http.services.pihole-primary.loadbalancer.server.port=80"
    networks:
      - proxy
    restart: unless-stopped

  wireguard:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wireguard
    environment:
      - LANG=en
      - WG_HOST=vpn.${DOMAIN}
      - PASSWORD_HASH=${WIREGUARD_PASSWORD}
      - UI_TRAFFIC_STATS=true
      - UI_CHART_TYPE=3
    volumes:
      - ./wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.rule=Host(`wireguard.local.${DOMAIN}`)"
      - "traefik.http.routers.wireguard.entrypoints=https"
      - "traefik.http.routers.wireguard.tls=true"
      - "traefik.http.services.wireguard.loadbalancer.server.port=51821"
    networks:
      - proxy
    restart: unless-stopped

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    networks:
      - proxy
    ports:
      - "8888:8080"
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL=https://searxng.local.${DOMAIN}
      - PUID=1000
      - PGID=1000
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.searxng.rule=Host(`searxng.local.${DOMAIN}`)"
      - "traefik.http.routers.searxng.entrypoints=https"
      - "traefik.http.routers.searxng.tls=true"
      - "traefik.http.services.searxng.loadbalancer.server.port=8080"
    restart: unless-stopped

  www:
    image: nginx:latest
    container_name: www
    ports:
      - "8080:80"
    volumes:
      - ./www/:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.www.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)"
      - "traefik.http.routers.www.entrypoints=https"
      - "traefik.http.routers.www.tls=true"
      - "traefik.http.services.www.loadbalancer.server.port=80"
    networks:
      - proxy
    restart: unless-stopped

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    environment:
      NTFY_BASE_URL: "https://ntfy.${DOMAIN}"
      NTFY_CACHE_FILE: /var/lib/ntfy/cache.db
      NTFY_AUTH_FILE: /var/lib/ntfy/auth.db
      NTFY_AUTH_DEFAULT_ACCESS: deny-all
      NTFY_BEHIND_PROXY: true
      NTFY_ATTACHMENT_CACHE_DIR: /var/lib/ntfy/attachments
      NTFY_ENABLE_LOGIN: true
      TZ: ${TIMEZONE}
    user: 1000:1000
    volumes:
      - ./ntfy/var/cache:/var/cache/ntfy
      - ./ntfy/etc:/etc/ntfy
      - ./ntfy/var/lib:/var/lib/ntfy
    ports:
      - 3003:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ntfy.rule=Host(`ntfy.${DOMAIN}`)"
      - "traefik.http.routers.ntfy.entrypoints=https"
      - "traefik.http.routers.ntfy.tls=true"
      - "traefik.http.services.ntfy.loadbalancer.server.port=80"
    networks:
      - proxy
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    ports:
      - 4550:80
    environment:
      DOMAIN: https://vault.local.${DOMAIN}
    volumes:
      - ./vaultwarden:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.local.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=https"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
    networks:
      - proxy
    restart: unless-stopped

networks:
  proxy:
    external: true
